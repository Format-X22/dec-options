default:
  tags: ["docker"]
  image: node:lts

stages:
  - build
  - deploy

build_stage:
  only:
    refs:
      - develop
  image: node:lts
  stage: build
  script:
    - yarn
    - mv .env.example.staging .env
    - cat .env
    - CI=false yarn build:all
    - mkdir bundle
    - mv dist bundle/
    - mv apps bundle/
    - mv deploy bundle/
    - mv package.json bundle/
    - mv tsconfig.json bundle/
    - mv ecosystem.config.js bundle/
    - mv .env bundle/
  artifacts:
    expire_in: 1 week
    paths:
      - bundle

build_production:
  only:
    refs:
      - master
  image: node:lts
  stage: build
  script:
    - yarn
    - mv .env.example .env
    - cat .env
    - CI=false yarn build:all
    - mkdir bundle
    - mv dist bundle/
    - mv apps bundle/
    - mv deploy bundle/
    - mv package.json bundle/
    - mv tsconfig.json bundle/
    - mv ecosystem.config.js bundle/
    - mv .env bundle/
  artifacts:
    expire_in: 1 week
    paths:
      - bundle

deploy_stage:
  stage: deploy
  script:
    - apt-get update -qq && apt-get install  -y -qq sshpass rsync
    - echo "====== Deploy to production server ======"
    - mkdir ~/.ssh
    - cat $TARGET_SERVER_SECRET_KEY_BASE64 >> ~/.ssh/id_rsa
    - chmod 0700 ~/.ssh && chmod 0600 ~/.ssh/*
    - chmod 0600 $TARGET_SERVER_SECRET_KEY_BASE64
    - rsync -avzh --no-perms --no-owner --no-group -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $TARGET_SERVER_SECRET_KEY_BASE64" --rsync-path="sudo rsync" --delete --progress bundle/ $TARGET_SERVER_USER@$TARGET_SERVER_HOST:/var/www/opex/stage/source
    - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $TARGET_SERVER_SECRET_KEY_BASE64 -T "$TARGET_SERVER_USER@$TARGET_SERVER_HOST" "cd /var/www/opex/stage/source/deploy && ./develop.sh"
  environment:
    name: deploying
  variables:
    branch: ${CI_COMMIT_REF_SLUG}
  only:
    - develop

deploy_production:
  stage: deploy
  script:
    - apt-get update -qq && apt-get install  -y -qq sshpass rsync
    - echo "====== Deploy to production server ======"
    - mkdir ~/.ssh
    - cat $TARGET_SERVER_SECRET_KEY_BASE64 >> ~/.ssh/id_rsa
    - chmod 0700 ~/.ssh && chmod 0600 ~/.ssh/*
    - chmod 0600 $TARGET_SERVER_SECRET_KEY_BASE64
    - rsync -avzh --no-perms --no-owner --no-group -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $TARGET_SERVER_SECRET_KEY_BASE64" --rsync-path="sudo rsync" --delete --progress bundle/ $TARGET_SERVER_USER@$TARGET_SERVER_HOST:/var/www/opex/production/source
    - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $TARGET_SERVER_SECRET_KEY_BASE64 -T "$TARGET_SERVER_USER@$TARGET_SERVER_HOST" "cd /var/www/opex/production/source/deploy && ./production.sh"
  environment:
    name: deploying
  variables:
    branch: ${CI_COMMIT_REF_SLUG}
  only:
    - master